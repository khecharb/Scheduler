@model Scheduler.ViewModels.EventViewModel

@{
    ViewBag.Title = "Index";
}
@*github check*@
<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>

@using (Html.BeginForm("Upload", "Event", FormMethod.Post, new { enctype = "multipart/form-data" }))

{
    @Html.AntiForgeryToken()

    <form action="" method="post" enctype="multipart/form-data">

        <label for="file">Upload File:</label>
        <input type="file" name="file" id="file" />

        <input type="submit" />
    </form>
}

@using (Html.BeginForm())
{
    <b>
        Search: @Html.RadioButton("option", "Name") 
        <text>Name</text> @Html.RadioButton("option", "Room") <text>Room</text> @Html.RadioButton("option", "Date") <text>Date</text> @Html.RadioButton("option", "Start Time")<text>Start Time</text> @Html.RadioButton("option", "End Time")<text>End Time</text>
        @Html.TextBox("search")
        <input type="submit" value="Search" />
    </b>
}

<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Name", "Index", new {SortOrder = ViewBag.NameSortParm})
           
        </th>
        <th>
            @Html.ActionLink("Room", "Index", new {SortOrder = ViewBag.RoomSortParm})
            
        </th>
        <th>
            @Html.ActionLink("Date", "Index", new { SortOrder = ViewBag.DateSortParm })
            
        </th>
        <th>
            @Html.ActionLink("Start Time", "Index", new { SortOrder = ViewBag.StartTimeSortParm })
          
        </th>
        <th>
            @Html.ActionLink("End Time", "Index", new { SortOrder = ViewBag.EndTimeSortParm })

        </th>
        <th></th>
    </tr>

@foreach (var item in Model.Events) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Room)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.EventDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.StartTime)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.EndTime)
        </td>
        <td>
            <ul id="needs">
                <!-- Existing list items will be pre-added to the tags -->
                <li>Tag1</li>
                <li>Tag2</li>
            </ul>
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.ID }) |
            @Html.ActionLink("Details", "Details", new { id=item.ID }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.ID })
        </td>
    </tr>
}

</table>

